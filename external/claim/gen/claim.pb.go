// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: claim.proto

package claim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Claim_StatusType int32

const (
	Claim_UNKNOWN             Claim_StatusType = 0
	Claim_CLAIM_CREATED       Claim_StatusType = 1
	Claim_CLAIM_ACKNOWLEDGED  Claim_StatusType = 2
	Claim_CLAIM_CANCELLED     Claim_StatusType = 3
	Claim_CLAIM_EXPIRED       Claim_StatusType = 4
	Claim_PAYMENT_IN_PROGRESS Claim_StatusType = 5
	Claim_PAYMENT_REJECTED    Claim_StatusType = 6
	Claim_PAYMENT_FAILED      Claim_StatusType = 7
	Claim_CLAIMED             Claim_StatusType = 8
	Claim_CLAIM_PAID          Claim_StatusType = 9
)

// Enum value maps for Claim_StatusType.
var (
	Claim_StatusType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CLAIM_CREATED",
		2: "CLAIM_ACKNOWLEDGED",
		3: "CLAIM_CANCELLED",
		4: "CLAIM_EXPIRED",
		5: "PAYMENT_IN_PROGRESS",
		6: "PAYMENT_REJECTED",
		7: "PAYMENT_FAILED",
		8: "CLAIMED",
		9: "CLAIM_PAID",
	}
	Claim_StatusType_value = map[string]int32{
		"UNKNOWN":             0,
		"CLAIM_CREATED":       1,
		"CLAIM_ACKNOWLEDGED":  2,
		"CLAIM_CANCELLED":     3,
		"CLAIM_EXPIRED":       4,
		"PAYMENT_IN_PROGRESS": 5,
		"PAYMENT_REJECTED":    6,
		"PAYMENT_FAILED":      7,
		"CLAIMED":             8,
		"CLAIM_PAID":          9,
	}
)

func (x Claim_StatusType) Enum() *Claim_StatusType {
	p := new(Claim_StatusType)
	*p = x
	return p
}

func (x Claim_StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Claim_StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_claim_proto_enumTypes[0].Descriptor()
}

func (Claim_StatusType) Type() protoreflect.EnumType {
	return &file_claim_proto_enumTypes[0]
}

func (x Claim_StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Claim_StatusType.Descriptor instead.
func (Claim_StatusType) EnumDescriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{0, 0}
}

type Address_AddressType int32

const (
	Address_RESIDENTIAL Address_AddressType = 0
	Address_COMMERCIAL  Address_AddressType = 1
)

// Enum value maps for Address_AddressType.
var (
	Address_AddressType_name = map[int32]string{
		0: "RESIDENTIAL",
		1: "COMMERCIAL",
	}
	Address_AddressType_value = map[string]int32{
		"RESIDENTIAL": 0,
		"COMMERCIAL":  1,
	}
)

func (x Address_AddressType) Enum() *Address_AddressType {
	p := new(Address_AddressType)
	*p = x
	return p
}

func (x Address_AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Address_AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_claim_proto_enumTypes[1].Descriptor()
}

func (Address_AddressType) Type() protoreflect.EnumType {
	return &file_claim_proto_enumTypes[1]
}

func (x Address_AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Address_AddressType.Descriptor instead.
func (Address_AddressType) EnumDescriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{3, 0}
}

type Company_CompanyType int32

const (
	Company_UNKNOWN         Company_CompanyType = 0
	Company_CORPORATION     Company_CompanyType = 1
	Company_PARTNERSHIP     Company_CompanyType = 2
	Company_GOVERNMENT      Company_CompanyType = 3
	Company_NONPROFIT       Company_CompanyType = 4
	Company_PUBLIC_COMPANY  Company_CompanyType = 5
	Company_PRIVATE_COMPANY Company_CompanyType = 6
)

// Enum value maps for Company_CompanyType.
var (
	Company_CompanyType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CORPORATION",
		2: "PARTNERSHIP",
		3: "GOVERNMENT",
		4: "NONPROFIT",
		5: "PUBLIC_COMPANY",
		6: "PRIVATE_COMPANY",
	}
	Company_CompanyType_value = map[string]int32{
		"UNKNOWN":         0,
		"CORPORATION":     1,
		"PARTNERSHIP":     2,
		"GOVERNMENT":      3,
		"NONPROFIT":       4,
		"PUBLIC_COMPANY":  5,
		"PRIVATE_COMPANY": 6,
	}
)

func (x Company_CompanyType) Enum() *Company_CompanyType {
	p := new(Company_CompanyType)
	*p = x
	return p
}

func (x Company_CompanyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Company_CompanyType) Descriptor() protoreflect.EnumDescriptor {
	return file_claim_proto_enumTypes[2].Descriptor()
}

func (Company_CompanyType) Type() protoreflect.EnumType {
	return &file_claim_proto_enumTypes[2]
}

func (x Company_CompanyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Company_CompanyType.Descriptor instead.
func (Company_CompanyType) EnumDescriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{4, 0}
}

type Phone_PhoneType int32

const (
	Phone_HOME  Phone_PhoneType = 0
	Phone_CELL  Phone_PhoneType = 1
	Phone_WORK  Phone_PhoneType = 2
	Phone_OTHER Phone_PhoneType = 3
)

// Enum value maps for Phone_PhoneType.
var (
	Phone_PhoneType_name = map[int32]string{
		0: "HOME",
		1: "CELL",
		2: "WORK",
		3: "OTHER",
	}
	Phone_PhoneType_value = map[string]int32{
		"HOME":  0,
		"CELL":  1,
		"WORK":  2,
		"OTHER": 3,
	}
)

func (x Phone_PhoneType) Enum() *Phone_PhoneType {
	p := new(Phone_PhoneType)
	*p = x
	return p
}

func (x Phone_PhoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phone_PhoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_claim_proto_enumTypes[3].Descriptor()
}

func (Phone_PhoneType) Type() protoreflect.EnumType {
	return &file_claim_proto_enumTypes[3]
}

func (x Phone_PhoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phone_PhoneType.Descriptor instead.
func (Phone_PhoneType) EnumDescriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{6, 0}
}

type Profile_ProfileType int32

const (
	Profile_PERSON  Profile_ProfileType = 0
	Profile_COMPANY Profile_ProfileType = 1
)

// Enum value maps for Profile_ProfileType.
var (
	Profile_ProfileType_name = map[int32]string{
		0: "PERSON",
		1: "COMPANY",
	}
	Profile_ProfileType_value = map[string]int32{
		"PERSON":  0,
		"COMPANY": 1,
	}
)

func (x Profile_ProfileType) Enum() *Profile_ProfileType {
	p := new(Profile_ProfileType)
	*p = x
	return p
}

func (x Profile_ProfileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Profile_ProfileType) Descriptor() protoreflect.EnumDescriptor {
	return file_claim_proto_enumTypes[4].Descriptor()
}

func (Profile_ProfileType) Type() protoreflect.EnumType {
	return &file_claim_proto_enumTypes[4]
}

func (x Profile_ProfileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Profile_ProfileType.Descriptor instead.
func (Profile_ProfileType) EnumDescriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{7, 0}
}

type Claim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email                 string           `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Amount                string           `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode          string           `protobuf:"bytes,3,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	ClientReferenceNumber string           `protobuf:"bytes,4,opt,name=clientReferenceNumber,proto3" json:"clientReferenceNumber,omitempty"`
	Description           string           `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Status                Claim_StatusType `protobuf:"varint,7,opt,name=status,proto3,enum=claim.Claim_StatusType" json:"status,omitempty"`
	CreatedOn             string           `protobuf:"bytes,8,opt,name=createdOn,proto3" json:"createdOn,omitempty"`
	ExpiresOn             string           `protobuf:"bytes,9,opt,name=expiresOn,proto3" json:"expiresOn,omitempty"`
}

func (x *Claim) Reset() {
	*x = Claim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Claim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claim) ProtoMessage() {}

func (x *Claim) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claim.ProtoReflect.Descriptor instead.
func (*Claim) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{0}
}

func (x *Claim) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Claim) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Claim) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Claim) GetClientReferenceNumber() string {
	if x != nil {
		return x.ClientReferenceNumber
	}
	return ""
}

func (x *Claim) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Claim) GetStatus() Claim_StatusType {
	if x != nil {
		return x.Status
	}
	return Claim_UNKNOWN
}

func (x *Claim) GetCreatedOn() string {
	if x != nil {
		return x.CreatedOn
	}
	return ""
}

func (x *Claim) GetExpiresOn() string {
	if x != nil {
		return x.ExpiresOn
	}
	return ""
}

type CreateClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claim   *Claim   `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
	Profile *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *CreateClaimRequest) Reset() {
	*x = CreateClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimRequest) ProtoMessage() {}

func (x *CreateClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimRequest.ProtoReflect.Descriptor instead.
func (*CreateClaimRequest) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{1}
}

func (x *CreateClaimRequest) GetClaim() *Claim {
	if x != nil {
		return x.Claim
	}
	return nil
}

func (x *CreateClaimRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type CreateClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateClaimResponse) Reset() {
	*x = CreateClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimResponse) ProtoMessage() {}

func (x *CreateClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimResponse.ProtoReflect.Descriptor instead.
func (*CreateClaimResponse) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{2}
}

func (x *CreateClaimResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddressType Address_AddressType `protobuf:"varint,2,opt,name=addressType,proto3,enum=claim.Address_AddressType" json:"addressType,omitempty"`
	Line1       string              `protobuf:"bytes,4,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2       string              `protobuf:"bytes,5,opt,name=line2,proto3" json:"line2,omitempty"`
	City        string              `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	State       string              `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	PostalCode  string              `protobuf:"bytes,8,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	CountryCode string              `protobuf:"bytes,9,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Address) GetAddressType() Address_AddressType {
	if x != nil {
		return x.AddressType
	}
	return Address_RESIDENTIAL
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessType Company_CompanyType `protobuf:"varint,3,opt,name=businessType,proto3,enum=claim.Company_CompanyType" json:"businessType,omitempty"`
	Name         string              `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Tin          string              `protobuf:"bytes,5,opt,name=tin,proto3" json:"tin,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{4}
}

func (x *Company) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Company) GetBusinessType() Company_CompanyType {
	if x != nil {
		return x.BusinessType
	}
	return Company_UNKNOWN
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetTin() string {
	if x != nil {
		return x.Tin
	}
	return ""
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,5,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleName string `protobuf:"bytes,6,opt,name=middleName,proto3" json:"middleName,omitempty"`
	LastName   string `protobuf:"bytes,7,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Dob        string `protobuf:"bytes,9,opt,name=dob,proto3" json:"dob,omitempty"`
	Ein        string `protobuf:"bytes,10,opt,name=ein,proto3" json:"ein,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{5}
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *Person) GetEin() string {
	if x != nil {
		return x.Ein
	}
	return ""
}

type Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneType   Phone_PhoneType `protobuf:"varint,2,opt,name=phoneType,proto3,enum=claim.Phone_PhoneType" json:"phoneType,omitempty"`
	CountryCode string          `protobuf:"bytes,4,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Number      string          `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	Ext         string          `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *Phone) Reset() {
	*x = Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phone) ProtoMessage() {}

func (x *Phone) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phone.ProtoReflect.Descriptor instead.
func (*Phone) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{6}
}

func (x *Phone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Phone) GetPhoneType() Phone_PhoneType {
	if x != nil {
		return x.PhoneType
	}
	return Phone_HOME
}

func (x *Phone) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Phone) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Phone) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId  string              `protobuf:"bytes,8,opt,name=externalId,proto3" json:"externalId,omitempty"`
	ProfileType Profile_ProfileType `protobuf:"varint,2,opt,name=profileType,proto3,enum=claim.Profile_ProfileType" json:"profileType,omitempty"`
	// Types that are assignable to Entity:
	//	*Profile_Person
	//	*Profile_Company
	Entity  isProfile_Entity `protobuf_oneof:"entity"`
	Address *Address         `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Phone   *Phone           `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_claim_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_claim_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_claim_proto_rawDescGZIP(), []int{7}
}

func (x *Profile) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Profile) GetProfileType() Profile_ProfileType {
	if x != nil {
		return x.ProfileType
	}
	return Profile_PERSON
}

func (m *Profile) GetEntity() isProfile_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *Profile) GetPerson() *Person {
	if x, ok := x.GetEntity().(*Profile_Person); ok {
		return x.Person
	}
	return nil
}

func (x *Profile) GetCompany() *Company {
	if x, ok := x.GetEntity().(*Profile_Company); ok {
		return x.Company
	}
	return nil
}

func (x *Profile) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Profile) GetPhone() *Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

type isProfile_Entity interface {
	isProfile_Entity()
}

type Profile_Person struct {
	Person *Person `protobuf:"bytes,3,opt,name=person,proto3,oneof"`
}

type Profile_Company struct {
	Company *Company `protobuf:"bytes,4,opt,name=company,proto3,oneof"`
}

func (*Profile_Person) isProfile_Entity() {}

func (*Profile_Company) isProfile_Entity() {}

var File_claim_proto protoreflect.FileDescriptor

var file_claim_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x22, 0xed, 0x03, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x4f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x4f, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x41, 0x43,
	0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x41, 0x49, 0x4d,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x09, 0x22, 0x62, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x28,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x9f, 0x02, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x52, 0x43, 0x49, 0x41, 0x4c, 0x10,
	0x01, 0x22, 0x86, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x69, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x4f, 0x56, 0x45, 0x52, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x4e, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x54, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x4e, 0x59, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x06, 0x22, 0x86, 0x01, 0x0a, 0x06, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f,
	0x62, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x69, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a,
	0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22,
	0x34, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x4f, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x10, 0x03, 0x22, 0xbc, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x22, 0x26, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x32, 0x56, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x6e, 0x65, 0x6d,
	0x65, 0x74, 0x73, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2d, 0x66, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_claim_proto_rawDescOnce sync.Once
	file_claim_proto_rawDescData = file_claim_proto_rawDesc
)

func file_claim_proto_rawDescGZIP() []byte {
	file_claim_proto_rawDescOnce.Do(func() {
		file_claim_proto_rawDescData = protoimpl.X.CompressGZIP(file_claim_proto_rawDescData)
	})
	return file_claim_proto_rawDescData
}

var file_claim_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_claim_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_claim_proto_goTypes = []interface{}{
	(Claim_StatusType)(0),       // 0: claim.Claim.StatusType
	(Address_AddressType)(0),    // 1: claim.Address.AddressType
	(Company_CompanyType)(0),    // 2: claim.Company.CompanyType
	(Phone_PhoneType)(0),        // 3: claim.Phone.PhoneType
	(Profile_ProfileType)(0),    // 4: claim.Profile.ProfileType
	(*Claim)(nil),               // 5: claim.Claim
	(*CreateClaimRequest)(nil),  // 6: claim.CreateClaimRequest
	(*CreateClaimResponse)(nil), // 7: claim.CreateClaimResponse
	(*Address)(nil),             // 8: claim.Address
	(*Company)(nil),             // 9: claim.Company
	(*Person)(nil),              // 10: claim.Person
	(*Phone)(nil),               // 11: claim.Phone
	(*Profile)(nil),             // 12: claim.Profile
}
var file_claim_proto_depIdxs = []int32{
	0,  // 0: claim.Claim.status:type_name -> claim.Claim.StatusType
	5,  // 1: claim.CreateClaimRequest.claim:type_name -> claim.Claim
	12, // 2: claim.CreateClaimRequest.profile:type_name -> claim.Profile
	1,  // 3: claim.Address.addressType:type_name -> claim.Address.AddressType
	2,  // 4: claim.Company.businessType:type_name -> claim.Company.CompanyType
	3,  // 5: claim.Phone.phoneType:type_name -> claim.Phone.PhoneType
	4,  // 6: claim.Profile.profileType:type_name -> claim.Profile.ProfileType
	10, // 7: claim.Profile.person:type_name -> claim.Person
	9,  // 8: claim.Profile.company:type_name -> claim.Company
	8,  // 9: claim.Profile.address:type_name -> claim.Address
	11, // 10: claim.Profile.phone:type_name -> claim.Phone
	6,  // 11: claim.ClaimService.CreateClaim:input_type -> claim.CreateClaimRequest
	7,  // 12: claim.ClaimService.CreateClaim:output_type -> claim.CreateClaimResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_claim_proto_init() }
func file_claim_proto_init() {
	if File_claim_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_claim_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Claim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_claim_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_claim_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Profile_Person)(nil),
		(*Profile_Company)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_claim_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_claim_proto_goTypes,
		DependencyIndexes: file_claim_proto_depIdxs,
		EnumInfos:         file_claim_proto_enumTypes,
		MessageInfos:      file_claim_proto_msgTypes,
	}.Build()
	File_claim_proto = out.File
	file_claim_proto_rawDesc = nil
	file_claim_proto_goTypes = nil
	file_claim_proto_depIdxs = nil
}
